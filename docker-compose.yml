version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        OSU_CLIENT_ID: ${OSU_CLIENT_ID}
        OSU_CLIENT_SECRET: ${OSU_CLIENT_SECRET}
        COOKIE_SECRET: ${COOKIE_SECRET}
    image: jahkon_col:latest
    container_name: jahkon_app
    restart: unless-stopped
    ports:
      - "5173:3000"        # 외부 5173 -> 내부 3000
    env_file:
      - .env
    environment:
      NODE_ENV: production
      PORT: 3000
      HOST: 0.0.0.0
      OSU_CLIENT_ID: ${OSU_CLIENT_ID}
      OSU_CLIENT_SECRET: ${OSU_CLIENT_SECRET}
      COOKIE_SECRET: ${COOKIE_SECRET}
    depends_on:
      - db
      - meilisearch
    networks:
      - jahkon-net


  db:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    # ports:
    #   - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - jahkon-net

  meilisearch:
    image: getmeili/meilisearch:v1.8
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
    # ports:
    #   - "7700:7700"
    volumes:
      - meili_data:/meili_data
    networks:
      - jahkon-net

  # Cloudflare tunneling via Zero-Trust
  cloudflared:
     image: cloudflare/cloudflared
     restart: unless-stopped
     command: tunnel run
     networks:
       - jahkon-net
     environment:
       - TUNNEL_TOKEN=eyJhIjoiY2IxYmVjMjQ5NmY0ZjRlYmJlZWY1NjUyYTk4ODQ5NjgiLCJ0IjoiNmY2Mjk5MGQtYjA3Ny00NTRjLTk0MjctYmQzNmNiM2FjYjc5IiwicyI6Ik1HTXdaVEU1WVRrdFlUaGpNQzAwT0dGakxXSTNNakV0TWprNE1USTVaV1l5WlRjdyJ9


volumes:
  postgres_data:
  meili_data:

networks:
  jahkon-net:
    name: jahkon-net
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1
    enable_ipv6: false
